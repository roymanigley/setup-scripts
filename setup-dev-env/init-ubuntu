#!/bin/bash
declare email=roy.manigley@gmail.com
declare username=$USER
declare java_version="17.0.2-open"
declare maven_version="latest"
declare node_version="latest"
declare toolbox_version="1.23.11849"

echo "[+] installing required tools"
sudo apt update \
    && sudo apt upgrade -y \
    && sudo apt install zsh git curl wget vim build-essential meld xclip -y

echo "[+] installing ohmyzsh"
echo "[!] (press CTRL+D after you entered the password and the zsh is prompted to continue the setup)"
# https://ohmyz.sh/#install
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
git clone https://github.com/powerline/fonts.git /tmp/fonts && /tmp/fonts/install.sh && rm -rf /tmp/fonts
git clone https://github.com/abertsch/Menlo-for-Powerline.git /tmp/menlo && sudo mv /tmp/menlo /usr/share/fonts && sudo fc-cache -vf /usr/share/fonts/
sed -e 's/\(ZSH_THEME=\).\+/\1"agnoster"/g' -i ~/.zshrc

echo "[+] installing docker"
# https://docs.docker.com/engine/install/ubuntu/
sudo apt remove docker docker-engine docker.io containerd runc -y
sudo apt update
sudo apt install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
 $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt install docker-ce docker-ce-cli containerd.io -y
sudo adduser $USER docker

echo "[+] installing sdkman"
curl -s "https://get.sdkman.io" | bash
declare EXPORT_SDKMAN="#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!\n
export SDKMAN_DIR=\"$HOME/.sdkman\"\n
[[ -s \"$HOME/.sdkman/bin/sdkman-init.sh\" ]] && source \"$HOME/.sdkman/bin/sdkman-init.sh\"
"
echo "[+] installing nvm"
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
declare EXPORT_NVM='export NVM_DIR="$HOME/.nvm"\n
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm\n
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion' # This loads nvm

echo -e $EXPORT_SDKMAN >> ~/.bashrc
echo -e $EXPORT_NVM >> ~/.zshrc
echo -e $EXPORT_SDKMAN >> ~/.zshrc

echo "[+] setting up git"
git config --global core.editor vim
git config --global user.email "roy.manigley@gmail.com"
git config --global user.name $username
git config --global merge.tool meld
git config --global mergetool.prompt false
git config --global diff.tool meld
git config --global difftool.prompt false

echo "[+] setting up git"
wget "https://download.jetbrains.com/toolbox/jetbrains-toolbox-$toolbox_version.tar.gz" -O /tmp/toolbox.tar
sudo apt install fuse -y
tar xvf /tmp/toolbox.tar -C /tmp
/tmp/jetbrains-toolbox-$toolbox_version/jetbrains-toolbox

echo "alias c=\"xclip -sel clip\"" >> ~/.zshrc

source ~/.bashrc
echo "[+] done"
